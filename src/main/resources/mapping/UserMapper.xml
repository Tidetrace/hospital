<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhiyou.mapper.UserMapper">

    <resultMap id="userMap" type="UserModel">
        <id property="id" column="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="is_admin" property="is_admin"/>
        <result column="real_name" property="real_name"/>
        <result column="email" property="email"/>
        <result column="state" property="state"/>
        <result column="creater" property="creater"/>
        <result column="create_time" property="create_time"/>
        <result column="updater" property="updater"/>
        <result column="update_time" property="update_time"/>
        <association property="roleModel" column="role_id" select="com.zhiyou.mapper.RoleMapper.selectByRoleIdParam" javaType="RoleModel"/>
    </resultMap>

    <select id="selectByNP" resultMap="userMap" parameterType="java.util.HashMap">
        SELECT * from hosp_user WHERE username=#{username} and password=#{password} and state = 1
    </select>


    <!--根据用户名进行分页模糊查询-->
    <select id="selectUserAll" parameterType="String" resultMap="userMap">
        select * from hosp_user
        <where>
            <if test="_parameter!=null and _parameter!=''">
                username like CONCAT('%',#{username},'%')
            </if>
        </where>
    </select>

    <!--根据id进行查询-->
    <select id="selectUserById" resultMap="userMap" parameterType="Integer">
        select * from hosp_user
        <where>
            <if test="_parameter!=null and _parameter!=''">
                id = #{id}
            </if>
        </where>
    </select>

    <!--修改用户-->
    <update id="updateUserIdById" parameterType="UserModel">
        update hosp_user
        <trim prefix="set" suffixOverrides="," suffix=" where id = #{id} ">

            <if test="password != null and password.length()>0"> password=#{password} , </if>

            <if test="real_name != null and real_name.length()>0"> real_name=#{real_name} ,  </if>

            <if test="email != null and email.length()>0"> email=#{email} , </if>

            <if test="state != null"> state=#{state} ,  </if>

            <if test="roleModel.id != null and roleModel.id.length()>0"> role_id=#{roleModel.id} ,  </if>

            <if test="updater != null and updater.length()>0"> updater=#{updater} ,  </if>

            <if test="update_time != null"> update_time=#{update_time} ,  </if>

            <if test="is_admin != null"> is_admin=#{is_admin} ,  </if>
        </trim>
    </update>

    <!--添加用户-->
    <insert id="saveUserInfo" parameterType="UserModel">
        insert into hosp_user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="username != null" >
                username,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="real_name != null" >
                real_name,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="creater != null" >
                creater,
            </if>
            <if test="create_time != null" >
                create_time,
            </if>
            <if test="roleModel.id != null" >
                role_id,
            </if>
            <if test="is_admin!=null">
                is_admin,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="username != null" >
                #{username},
            </if>
            <if test="password != null" >
                #{password},
            </if>
            <if test="real_name != null" >
                #{real_name},
            </if>
            <if test="email != null" >
                #{email},
            </if>
            <if test="state != null" >
                #{state},
            </if>
            <if test="creater != null" >
                #{creater},
            </if>
            <if test="create_time != null" >
                #{create_time},
            </if>
            <if test="roleModel.id != null" >
                #{roleModel.id},
            </if>
            <if test="is_admin!=null">
                #{is_admin},
            </if>
        </trim>
    </insert>

    <!--根据用户编号删除用户信息-->
    <delete id="deleteUserById" parameterType="Integer">
        delete from hosp_user
        <where>
            <if test="_parameter!=null">
                id = #{id}
            </if>
        </where>
    </delete>


    <!--批量删除用户-->
    <delete id="deleteUserByParams" parameterType="int[]">
        delete from hosp_user where id in
        <foreach collection="array" item="ids" index="no" open="("
                 separator="," close=")">
            #{ids}
        </foreach>
    </delete>


    <!--修改密码-->
    <update id="updateByUserPwd" parameterType="Map">
        update hosp_user
        <set>
            <if test="pwd!=null and pwd!=''">
                password = #{pwd}
            </if>
        </set>
        <where>
            <if test="id!=null and id!=''">
                id = #{id}
            </if>
        </where>
    </update>



</mapper>














